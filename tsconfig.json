{
  "compilerOptions": {
    /**
     * We're compiling 2 different bundles: ESM and CommonJS
     *
     * There are rules for the ESM compiling.
     * They will be overridden by tsconfig-cjs.json for the CommonJS bundle
     */
    "module": "esnext",
    "outDir": "dist/mjs",
    "target": "esnext",


    /**
     * Options below are the same for both bundles: ESM and CJS
     * ----------------------------------------------------
     */


    "allowJs": true,                          /* Allow javascript files to be compiled. */
    "declaration": true,                      /* Generates corresponding '.d.ts' file. */
    "strict": true,                           /* Enable all strict type-checking options. */
    "moduleResolution": "node",               /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    "baseUrl": ".",                           /* Base directory to resolve non-absolute module names. */

    /**
     * A series of entries which re-map imports to lookup locations relative to the 'baseUrl'.
     */
    "paths": {
      "*": [
        "./types/*"
      ]
    },

    "allowSyntheticDefaultImports": true,  /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    "esModuleInterop": true                /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
  },

  "include": [
    "src/**/*",
    "index.ts"
  ],

  "exclude": [
    "node_modules",
    "dist"
  ]
}
